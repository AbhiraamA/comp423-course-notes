{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to Abhi Aremanda's Course Notes","text":"<p>This is my home page. I will use it to organize and share my course notes.</p>"},{"location":"tutorials/go-setup/","title":"Setting up a dev container for Go","text":"<ul> <li>Primary author: Abhiraam Aremanda</li> <li>Reviewer: Tanveer Thethi</li> </ul>"},{"location":"tutorials/go-setup/#prerequisites","title":"Prerequisites \ud83d\udee0\ufe0f","text":"<p>Before starting, ensure you have the following installed:</p> <ul> <li>\ud83d\udc33 Docker for your specific operating system</li> <li>\ud83d\udda5\ufe0f Visual Studio Code with the Dev Containers extension</li> <li>\ud83d\udcc2 Git and have a GitHub account</li> </ul> <p>Note</p> <p>For more information about installing Docker, refer to the Docker Documentation.</p>"},{"location":"tutorials/go-setup/#step-1-initialize-a-git-repository","title":"Step 1: Initialize a Git Repository \ud83d\udd27","text":""},{"location":"tutorials/go-setup/#1-start-by-creating-a-directory-for-your-project-and-initializing-a-git-repository","title":"1. Start by creating a directory for your project and initializing a Git repository:","text":"Command Description <code>mkdir go-setup</code> Creates a directory named <code>go-setup</code>. <code>cd go-setup</code> Navigates to the new directory. <code>git init</code> Initializes a Git repository in the current folder. <p>Run the following commands in your terminal: bsh<pre><code>mkdir go-setup\ncd go-setup\ngit init\n</code></pre></p> <p>Create a README.md file with a description of your project: bsh<pre><code>echo \"# Go Setup Project\" &gt; README.md\ngit add README.md\ngit commit -m \"Initial commit with README\"\n</code></pre></p>"},{"location":"tutorials/go-setup/#2-create-a-remote-repository-on-github","title":"2. Create a Remote Repository on GitHub","text":"<ol> <li> <p>Log in to your GitHub account and navigate to the Create a New Repository page.</p> </li> <li> <p>Fill in the details as follows:</p> <ul> <li>Repository Name: go-setup</li> <li>Description: \"A simple Go project to demonstrate Go setup and Dev Containers.\"</li> <li>Visiblity: Public</li> </ul> </li> <li> <p>Leave the options to initialize with a README, .gitignore, or license unchecked.</p> </li> <li> <p>Click Create Repository.</p> </li> </ol>"},{"location":"tutorials/go-setup/#3-link-your-local-repository-to-github","title":"3. Link Your Local Repository to GitHub","text":"<ol> <li> <p>Add the GitHub repository as a remote:     bsh<pre><code>git remote add origin https://github.com/&lt;your-username&gt;/go-setup.git\n</code></pre>     Replace  with your GitHub username. <li> <p>Rename your branch to main (if not already named main):     bsh<pre><code>git branch -M main\n</code></pre></p> </li> <li>Push your local repository to GitHub:     bsh<pre><code>git push --set-upstream origin main\n</code></pre></li> <li>Verify your repository on GitHub to confirm your local changes have been pushed.</li>"},{"location":"tutorials/go-setup/#step-2-configure-the-dev-container","title":"Step 2: Configure the Dev Container \ud83d\udce6","text":"<ol> <li> <p>Create a .devcontainer directory:     bsh<pre><code>mkdir .devcontainer\n</code></pre></p> </li> <li> <p>Create a devcontainer.json file in the .devcontainer folder:     bsh<pre><code>touch .devcontainer/devcontainer.json\n</code></pre></p> </li> <li> <p>Add the following devcontainer.json file to the .devcontainer folder:     json<pre><code>{\n    \"name\": \"Go Dev Container\",\n    \"image\": \"mcr.microsoft.com/devcontainers/go:latest\",\n    \"customizations\": {\n        \"vscode\": {\n            \"extensions\": [\"golang.go\"]\n        }\n    }\n}\n</code></pre></p> </li> </ol> <p>Info</p> <p>The golang.go VSCode extension is officially maintained by the Go team. It provides helpful tools like syntax highlighting, debugging, and IntelliSense.</p>"},{"location":"tutorials/go-setup/#step-3-verify-go-installation","title":"Step 3: Verify Go Installation \ud83d\udc39","text":"<p>Once the Dev Container is up and running, check the installed Go version:</p> <p>Run in your terminal: bsh<pre><code>go version\n</code></pre></p> <p>You should see output similar to: bsh<pre><code>go version go1.20.0 linux/amd64\n</code></pre></p>"},{"location":"tutorials/go-setup/#step-4-create-the-hello-423-program","title":"Step 4: Create the Hello 423 Program \u2728","text":"<p>Now its time to create your first Go program</p> <p>Info</p> <p>The go mod command helps initialize, update, and manage the go.mod file for your project. The go.mod file contains metadata about the module, including:</p> <p>The module's name (its import path).</p> <p>The minimum required dependencies and their versions.</p> <ol> <li>Initialize the Go Module: bsh<pre><code>go mod init example.com/hello\n</code></pre></li> <li> <p>Create the main.go file: bsh<pre><code>touch main.go\n</code></pre></p> <p>This will create an empty file named main.go in the current directory.</p> </li> <li> <p>Add the Code into the main.go file: go<pre><code>package main\n\nimport \"fmt\"\n\nfunc main() {\n    fmt.Println(\"Hello COMP423\")\n}\n</code></pre></p> </li> </ol>"},{"location":"tutorials/go-setup/#step-5-compile-and-run-the-program","title":"Step 5: Compile and Run the Program \ud83d\ude80","text":"<p>You can now run or build the program.</p> Command Description <code>go run main.go</code> Compiles and runs the code directly in one step. <code>go build</code> Builds a binary file of the program (e.g., hello) for later use. <ol> <li> <p>Run the program directly: bsh<pre><code>go run main.go\n</code></pre>     Output:</p> <pre><code>Hello COMP423\n</code></pre> </li> <li> <p>Build and execute the binary: bsh<pre><code>go build\n./hello\n</code></pre></p> </li> </ol> <p>Tip</p> <p>Use go build to create a standalone binary for production environments. go run is mainly used during development.</p>"},{"location":"tutorials/go-setup/#step-6-verify-and-push","title":"Step 6: Verify and Push \ud83d\udcdd","text":"<ol> <li> <p>Verify the program runs correctly.</p> </li> <li> <p>Push your repository to GitHub: bsh<pre><code>git add .\ngit commit -m \"Initial Go setup\"\ngit push origin main\n</code></pre></p> </li> </ol>"},{"location":"tutorials/go-setup/#links-to-additional-resources","title":"Links to Additional Resources \ud83d\udd17","text":"<ul> <li>Go Documentation</li> <li>MkDocs Documentation</li> </ul> <p>NOTE: I hope you enjoyed this Go demo! Thank you for visiting this website! </p>"}]}